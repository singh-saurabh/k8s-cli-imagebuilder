name: Test Suite

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Check code style
      run: |
        # Install and run basic linting
        pip install flake8
        flake8 docker-build-cli.py --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 docker-build-cli.py --max-line-length=127 --max-complexity=15 --ignore=E501,W503,C901 --statistics
    
    - name: Run unit tests
      run: |
        python -m pytest test/ -v --tb=short
    
    - name: Run security tests
      run: |
        python -m pytest test/test_security.py -v
    
    - name: Test CLI help
      run: |
        python docker-build-cli.py --help
    
    - name: Verify YAML template exists
      run: |
        test -f buildkit-pod.yaml
        echo "✅ BuildKit pod YAML template found"

  test-integration:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test with missing Dockerfile
      run: |
        # Should fail gracefully when no Dockerfile present
        ! python docker-build-cli.py --image-name test/app:latest --dockerhub-username test --dockerhub-token test
    
    - name: Test credential validation
      run: |
        # Should fail when credentials are missing
        ! python docker-build-cli.py --image-name test/app:latest
        echo "✅ Credential validation works correctly"
    
    - name: Run comprehensive test suite
      run: |
        python run_tests.py